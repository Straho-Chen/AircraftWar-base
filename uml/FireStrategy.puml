@startuml
'https://plantuml.com/class-diagram

class GameTemplate {
}

interface FireStrategy {
    + fireSet(AbstractAircraft abstractAircraft, int direction):List<AbstractBullet>
}

Abstract class AbstractAircraft {
    # fireStrategy:FireStrategy
    # direction:int
    + setFireStrategy(FireStrategy fireStrategy):void
    + getFireStrategy():FireStrategy
    + executeStrategy(AbstractAircraft abstractAircraft):List<AbstractBullet>
}

class DirectBallistic {
    - shootNum:int
    - power:int
    + fireSet(AbstractAircraft abstractAircraft, int direction):List<AbstractBullet>
}

class ScatteringBallistic {
    - shootNum:int
    - power:int
    + fireSet(AbstractAircraft abstractAircraft, int direction):List<AbstractBullet>
}

GameTemplate ..> AbstractAircraft

AbstractAircraft o--> FireStrategy

FireStrategy <|.. DirectBallistic
FireStrategy <|.. ScatteringBallistic

@enduml